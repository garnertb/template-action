name: 'Create Issue'
on:
  workflow_dispatch:
  issue_comment:
    types: [created]
jobs:
  add-comment:
    if: startsWith(github.event.comment.body, '/getRecentIssues')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v1
      - name: install dependencies
        run: |
          npm install
      - uses: octokit/request-action@v2.x
        id: open-issues
        with:
          route: /repos/:owner/:repo/issues?sort=updated&per_page=100&state=all
          owner: garnertb
          repo: handlebars-action
        env:
          GITHUB_TOKEN: ${{ secrets.token }} 
      
      - uses: ./
        id: issue-body
        with:
          issues: ${{ steps.open-issues.outputs.data }}
          template: |
            ## Open issues
            {{#if issues}}
              {{#each issues }}
              {{#withinAWeek this.updated_at}}
              - [ ] #{{this.number}}
              {{/withinAWeek}}
              {{/each }}
            {{else}}
              No recent issues
            {{/if}}
      
      - uses: octokit/request-action@v2.x
        id: comment
        with:
          route: POST /repos/{owner}/{repo}/issues/{issue_number}/comments
          owner: ${{ github.repository_owner }}
          repo: template-action
          issue_number: ${{ github.event.issue.number }}
          body: ${{ toJSON(steps.issue-body.outputs.payload) }}
        env:
          GITHUB_TOKEN: ${{ secrets.token }} 
